common:
  affinity: {}
  autoscaling:
    enabled: false
    maxReplicas: 100
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  fullnameOverride: ""
  global:
    imagePullSecret:
    - name: regecd
    ingress:
      annotations: null
      enabled: true
      hosts:
      - host: example.com
        paths:
        - path: /isAlive
          port: 3001
          service: test
      tls: []
    resources:
      limits:
        cpu: 100m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 200Mi
  image:
    pullPolicy: IfNotPresent
    repository: nginx
    tag: ""
  imagePullSecrets: []
  ingress:
    annotations: {}
    enabled: false
    hosts:
    - host: chart-example.local
      paths: []
    tls: []
  nameOverride: ""
  nodeSelector: {}
  podAnnotations: {}
  podSecurityContext: {}
  replicaCount: 1
  resources: {}
  securityContext: {}
  service:
    port: 80
    type: ClusterIP
  serviceAccount:
    annotations: {}
    create: true
    name: ""
  tolerations: []
global:
  imagePullSecret:
  - name: regecd
  ingress:
    annotations: null
    enabled: true
    hosts:
    - host: example.com
      paths:
      - path: /isAlive
        port: 3000
        service: test
    tls: []
  resources:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 200Mi
test:
  affinity: {}
  autoscaling:
    enabled: false
    maxReplicas: 100
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  configmaps: []
  fullnameOverride: test
  global:
    imagePullSecret:
    - name: regecd
    ingress:
      annotations: null
      enabled: true
      hosts:
      - host: example.com
        paths:
        - path: /isAlive
          port: 3000
          service: test
      tls: []
    resources:
      limits:
        cpu: 100m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 200Mi
  images:
    pullPolicy: Always
    repository: rabazhub.azurecr.io/test
    tag: 13
  nameOverride: test
  nodeSelector: {}
  podAnnotations: {}
  replicaCount: 2
  resources: {}
  service:
    port: 3000
    type: ClusterIP
  serviceAccount:
    annotations: {}
    create: true
    name: test
  tolerations: []
